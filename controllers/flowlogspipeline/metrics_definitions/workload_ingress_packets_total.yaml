#flp_confgen
description:
  This metric observes the incoming traffic
details:
  Sum packet number for incoming traffic per source and destination namespaces and owners
usage:
  Evaluate network incoming usage breakdown per source and destination namespaces and owners
tags:
  - ingress
  - packets
  - workloads
encode:
  type: prom
  prom:
    metrics:
      - name: workload_ingress_packets_total
        type: counter
        valuekey: Packets
        filter:
          key: FlowDirection
          value: "0"
        labels:
          - SrcK8S_Namespace
          - DstK8S_Namespace
          - SrcK8S_OwnerName
          - DstK8S_OwnerName
          - SrcK8S_OwnerType
          - DstK8S_OwnerType
visualization:
  type: grafana
  grafana:
    - expr: |
        label_replace(
          label_replace(
            topk(5, sum(
              rate(netobserv_workload_ingress_packets_total{SrcK8S_OwnerType!~"|Node",DstK8S_OwnerType!~"|Node"}[1m])
              or rate(netobserv_workload_ingress_packets_total{SrcK8S_OwnerType=~"|Node",DstK8S_OwnerType!~"|Node"}[1m])
              or rate(netobserv_workload_ingress_packets_total{SrcK8S_OwnerType!~"|Node",DstK8S_OwnerType=~"|Node"}[1m])
            ) by (SrcK8S_Namespace, SrcK8S_OwnerName, DstK8S_Namespace, DstK8S_OwnerName)),
            "SrcK8S_Namespace", "non pods", "SrcK8S_Namespace", "()"
          ),
          "DstK8S_Namespace", "non pods", "DstK8S_Namespace", "()"
        )
      legendFormat: '{{SrcK8S_OwnerName}} ({{SrcK8S_Namespace}}) -> {{DstK8S_OwnerName}} ({{DstK8S_Namespace}})'
      type: graphPanel
      dashboard: netobserv
      title:
        Top packet rates received per source and destination workloads (1-min rates)
